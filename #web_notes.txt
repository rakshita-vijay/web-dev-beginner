code files: html, css, js
            html: content of website (text, images, links, buttons)
            css: design of website (style of content)
            js: functionality of website (converts static -> usable. helps to do things)

// ~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

html: hyper-text markup language
      uses hyperlinks

element: opening tag + content + closing tag
tag: enclosed in <>

// ~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

heading tag: <h1>, </h1>
paragraph tag: <p>, </p>
horizontal rule element: <hr /> or <hr> (inserts a line)
break element: <br /> or <br>

unordered list tag: <ul>, </ul>
                    syntax: <ul>
                                <li> </li>
                                <li> </li>
                                    .
                                    .
                                    .
                            </ul>

ordered list tag: <ol>, </ol>
                  syntax: <ol>
                              <li> </li>
                              <li> </li>
                                  .
                                  .
                                  .
                          </ol>

anchor element: <a>, </a>
                syntax: <a attribute=value>, </a>
                ex: <a href="https://web.whatsapp.com/">WhatsApp</a>

void elements:
      horizontal rule element: <hr /> or <hr> (inserts a line)
      break element: <br /> or <br>
      image element: <img src="url" alt="small_description"> (enter a url, and a small description[Alternate Text Description])

// ~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

multi-page websites: made up of webpages
                     multiple files stored in the same folder
                     ex: index.html, about.html, contact.html

// ~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

css: cascading style sheets

css tags:
        inline: for 1 element
                written in the boilerplate tag

                <tag style="css" />
                == <tag attribute="property: value">, </tag>

        internal: for 1 webpage
                  generally not used if multi-page website
                  written inside <head>, </head>

                  <style> css </style>
                  == <style>
                       selector {   (html)
                         property: value;
                       }
                     </style>

        external: for multi-page websites
                  generally used if multi-page website
                  saved in separate file (<...>.css)

                  <link rel="stylesheet" href="./style.css" />
                  == <html>
                       <head>
                         <link
                           rel="stylesheet"
                           href="./style.css"
                         />
                       </head>
                     </html>

                  calls file 'style.css' which contains:
                                                        selector {   (html)
                                                          property: value;
                                                        }

// ~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

in the external css files:
-------------------------
element selector: h1 {}, h2 {}, h3 {}, etc

class selector: applied to many elements in a html file (specified in the opening tag)

                .<user-defined-class> {
                  property: value;
                }


ID selector: applied to a single element in a html file (specified in the opening tag)

             #<user-defined-ID> {
               property: value;
             }

attribute selector: <html_element>[attribute] {
                      property: value
                    }
